
package studentrecordapp;


import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;


/**
 *
 * @author MUC
 */
public class HPEJFrame extends javax.swing.JFrame {

    /**
     * Creates new form HPEJFrame
     */
    public HPEJFrame() {
        initComponents();
        jTextFieldFName.setText("");
            jTextFieldSName.setText("");
            jTextFieldTest1.setText("0");
            jTextFieldTest2.setText("0");
            jTextFieldTest3.setText("0");
            jTextFieldAss1.setText("0");
            jTextFieldAss2.setText("0");
            jTextFieldAss3.setText("0");
            jTextFieldAss4.setText("0");
            jTextFieldTotal.setText("0");
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jTextFieldTest1 = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jTextFieldTest3 = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        jTextFieldTest2 = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        jTextFieldAss1 = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        jButtonAdd = new javax.swing.JButton();
        jLabel9 = new javax.swing.JLabel();
        jButtonExit = new javax.swing.JButton();
        jTextFieldFName = new javax.swing.JTextField();
        jTextFieldId = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        jTextFieldAss4 = new javax.swing.JTextField();
        jLabel11 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jTextFieldAss2 = new javax.swing.JTextField();
        jTextFieldAss3 = new javax.swing.JTextField();
        jLabel12 = new javax.swing.JLabel();
        jTextFieldSName = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        jTextFieldTotal = new javax.swing.JTextField();
        jComboBoxTerm = new javax.swing.JComboBox<>();
        jButtonUpdate1 = new javax.swing.JButton();

        jPanel1.setBackground(new java.awt.Color(153, 153, 255));

        jLabel2.setText("Test 2");

        jLabel3.setText("Test 1");

        jLabel4.setText("Test 3");

        jLabel6.setText("Surname");

        jLabel8.setText("ID ");

        jLabel10.setText("Assignment 3");

        jLabel13.setText("Term");

        jButtonAdd.setText("Add");
        jButtonAdd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonAddActionPerformed(evt);
            }
        });

        jLabel9.setText("Assignment 4");

        jButtonExit.setText("Exit");
        jButtonExit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonExitActionPerformed(evt);
            }
        });

        jTextFieldFName.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextFieldFNameActionPerformed(evt);
            }
        });

        jLabel1.setText("Firstname");

        jLabel11.setText("Assignment 2");

        jLabel7.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel7.setForeground(new java.awt.Color(0, 102, 102));
        jLabel7.setText("Enter tests and assignments marks for Health\\PE");

        jLabel12.setText("Assignment 1");

        jLabel5.setText("Total");

        jComboBoxTerm.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "1", "2", "3", "4" }));
        jComboBoxTerm.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jComboBoxTermMouseClicked(evt);
            }
        });
        jComboBoxTerm.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBoxTermActionPerformed(evt);
            }
        });

        jButtonUpdate1.setText("Update");
        jButtonUpdate1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonUpdate1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel7)
                        .addGap(134, 134, 134))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addGap(59, 59, 59)
                        .addComponent(jButtonUpdate1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jButtonAdd)
                        .addGap(164, 164, 164))))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(4, 4, 4)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1)
                    .addComponent(jLabel6)
                    .addComponent(jLabel8, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel5, javax.swing.GroupLayout.Alignment.TRAILING))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(jTextFieldTotal)
                            .addComponent(jTextFieldFName, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jTextFieldSName, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jTextFieldId, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 96, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(61, 61, 61)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel13, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jTextFieldTest2, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jTextFieldTest1, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jTextFieldTest3, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jComboBoxTerm, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel10)
                            .addComponent(jLabel9)
                            .addComponent(jLabel11)
                            .addComponent(jLabel12))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(jTextFieldAss3)
                                .addComponent(jTextFieldAss4, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(jTextFieldAss2, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jTextFieldAss1, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(jButtonExit)))
                .addGap(31, 31, 31))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addGap(19, 19, 19)
                .addComponent(jLabel7)
                .addGap(28, 28, 28)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel1)
                                    .addComponent(jTextFieldFName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(37, 37, 37)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel6)
                                    .addComponent(jTextFieldSName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(43, 43, 43)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jTextFieldId, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel8)))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel3)
                                    .addComponent(jTextFieldTest1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(37, 37, 37)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jTextFieldTest2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel2))
                                .addGap(43, 43, 43)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jTextFieldTest3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel4))))
                        .addGap(30, 30, 30)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel5)
                            .addComponent(jTextFieldTotal, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jComboBoxTerm, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel13))
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 36, Short.MAX_VALUE)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jButtonAdd)
                                    .addComponent(jButtonExit))
                                .addGap(80, 80, 80))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(44, 44, 44)
                                .addComponent(jButtonUpdate1)
                                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jTextFieldAss1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel12))
                        .addGap(34, 34, 34)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jTextFieldAss2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel11))
                                .addGap(43, 43, 43)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jTextFieldAss3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel10))
                                .addGap(50, 50, 50))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(jTextFieldAss4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jLabel9)))
                        .addContainerGap())))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButtonAddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonAddActionPerformed
        // Adds all the marks to give total
        double[] R = new double[14];
        R[0] = Double.parseDouble(jTextFieldTest1.getText());
        R[1] = Double.parseDouble(jTextFieldTest2.getText());
        R[2] = Double.parseDouble(jTextFieldTest3.getText());
        R[3] = Double.parseDouble(jTextFieldAss1.getText());
        R[4] = Double.parseDouble(jTextFieldAss2.getText());
        R[5] = Double.parseDouble(jTextFieldAss3.getText());
        R[6] = Double.parseDouble(jTextFieldAss4.getText());

        R[7]= R[0]+R[1]+R[2]+R[3]+R[4]+R[5]+R[6];
        String TotalEngScore = String.format("%.0f", R[7]);
        jTextFieldTotal.setText(TotalEngScore);
    }//GEN-LAST:event_jButtonAddActionPerformed

    private void jButtonExitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonExitActionPerformed
        // exits out of the window
        try{
            dispose();
        }catch(Exception e){
            System.out.println(e);
        }
    }//GEN-LAST:event_jButtonExitActionPerformed

    private void jTextFieldFNameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextFieldFNameActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextFieldFNameActionPerformed

    private void jComboBoxTermMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jComboBoxTermMouseClicked

        // TODO add your handling code here:
    }//GEN-LAST:event_jComboBoxTermMouseClicked

    private void jComboBoxTermActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBoxTermActionPerformed
        // Accepts jcombobox options
        jComboBoxTerm.getActionListeners();
        // jComboBoxTerm.addActionListener((ActionListener) this);

        // int selection=jComboBoxTerm.getSelectedIndex();
    }//GEN-LAST:event_jComboBoxTermActionPerformed

    private void jButtonUpdate1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonUpdate1ActionPerformed
        // Updates the total of HPE marks to database
        String qry=null;
        PreparedStatement ps=null;

        Connection conn=MySqlConnection();

        if(jTextFieldId!=null && jTextFieldFName!=null && jTextFieldSName!=null
            || jTextFieldTest1!=null || jTextFieldTest2!=null || jTextFieldTest3!=null
            || jTextFieldTotal!=null || jTextFieldAss1!= null || jTextFieldAss2!=null
            || jTextFieldAss3!=null || jTextFieldAss4!=null){

            String term=jComboBoxTerm.getSelectedItem().toString();
            switch(term)
            {
                case "1": conn=MySqlConnection();
                PreparedStatement ps7=null;
                {
                    try {
                        //delete HPE maks in overall
                        ps7 = conn.prepareStatement("update overall o inner join\n" +
                            "(\n" +
                            "SELECT op.StudentID, \n" +
                            "sum(ot.Total_Score) as Total_Score_ot,\n" +
                            "sum(ot.HPE) as HPE_ot,\n" +
                            "sum(op.Total_Score) as Total_Score_op,\n" +
                            "sum(op.HPE) as HPE_op\n" +
                            "FROM term1 ot inner join overall op on op.StudentID = ot.StudentID \n" +
                            "GROUP BY op.StudentID\n" +
                            ") as o1 on o.StudentID = o1.StudentID\n" +
                            "SET Total_Score=Total_Score_op - Total_Score_ot,\n" +
                            " HPE=HPE_op - HPE_ot\n" +
                            "\n" +
                            "\n" +
                            "");
                        int res2=ps7.executeUpdate();

                        //Delete HPE marks in Assessment Period 1
                        int res6;
                        PreparedStatement ps11=null;
                        ps11 = conn.prepareStatement("update assp1 o inner join\n" +
                            "(\n" +
                            "SELECT op.StudentID, \n" +
                            "sum(ot.Total_Score) as Total_Score_ot,\n" +
                            "sum(ot.HPE) as HPE_ot,\n" +
                            "sum(op.Total_Score) as Total_Score_op,\n" +
                            "sum(op.HPE) as HPE_op\n" +
                            "FROM term1 ot inner join assp1 op on op.StudentID = ot.StudentID \n" +
                            "GROUP BY op.StudentID\n" +
                            ") as o1 on o.StudentID = o1.StudentID\n" +
                            "SET Total_Score=Total_Score_op - Total_Score_ot,\n" +
                            "HPE=HPE_op - HPE_ot\n" +
                            "\n" +
                            "\n" +
                            "");
                        res6=ps11.executeUpdate();

                        //delete HPE marks in Grade 8 internal database
                        PreparedStatement ps12=null;
                        ps12 = conn.prepareStatement("update g8internal o inner join\n" +
                            "       (select ot.StudentID, sum(ot.Total_Score) as Total_Score_ot,\n"
                            + "sum(ot.HPE) as HPE_ot\n"
                            +
                            "        from term1 ot\n" +
                            "        where ot.Grade = 'Grade8'\n" +
                            "        group by ot.StudentId\n" +
                            "       ) ot\n" +
                            "       using (StudentID)\n" +
                            "    set o.Total_Score = o.Total_Score - Total_Score_ot,\n"
                            + "o.HPE = o.HPE - HPE_ot\n");
                        int res7=ps12.executeUpdate();

                        /*         //delete HPE marks in Grade 7 internal database
                        PreparedStatement ps13=null;
                        ps13 = conn.prepareStatement("update g734 o inner join\n" +
                            "       (select ot.StudentID, sum(ot.Total_Score) as Total_Score_ot,\n"
                            + "sum(ot.HPE) as HPE_ot\n"
                            +
                            "        from term1 ot\n" +
                            "        where ot.Grade = 'Grade7'\n" +
                            "        group by ot.StudentId\n" +
                            "       ) ot\n" +
                            "       using (StudentID)\n" +
                            "    set o.Total_Score = o.Total_Score - Total_Score_ot,\n"
                            + "o.HPE = o.HPE - HPE_ot\n");
                        int res13=ps13.executeUpdate(); */

                    } catch (SQLException ex) {
                        Logger.getLogger(MathJFrame.class.getName()).log(Level.SEVERE, null, ex);
                    }

                }

                try{
                    qry=null;
                    ps=null;
                    //upate term1 with HPE marks
                    qry="update term1 set FirstName=?, LastName=? , HPET1=HPET1+?, HPET2=HPET2+?, "
                    + "HPET3=HPET3+?, HPEA1=HPEA1+?,HPEA2=HPEA2+?, HPEA3=HPEA3+?, HPEA4=HPEA4+?, HPE=HPE+? "
                    +" where StudentID=?";
                    ps=conn.prepareStatement(qry);
                    ps.setString(1, jTextFieldFName.getText());
                    ps.setString(2, jTextFieldSName.getText());
                    ps.setInt(3, Integer.parseInt(jTextFieldTest1.getText()));
                    ps.setInt(4, Integer.parseInt(jTextFieldTest2.getText()));

                    ps.setInt(5, Integer.parseInt(jTextFieldTest3.getText()));
                    ps.setInt(6, Integer.parseInt(jTextFieldAss1.getText()));
                    ps.setInt(7, Integer.parseInt(jTextFieldAss2.getText()));
                    ps.setInt(8, Integer.parseInt(jTextFieldAss3.getText()));
                    ps.setInt(9, Integer.parseInt(jTextFieldAss4.getText()));
                    ps.setInt(10, Integer.parseInt(jTextFieldTotal.getText()));
                    ps.setInt(11, Integer.parseInt(jTextFieldId.getText()));

                    int res=ps.executeUpdate();

                    Statement st=null;
                    Statement st2=null;
                    ResultSet rs=null;
                    ResultSet rs2=null;
                    st=conn.createStatement();

                    if(res>=1){
                        JOptionPane.showMessageDialog(null, res+" HPE scores"
                            +" updated successfully...");
                    }else
                    JOptionPane.showMessageDialog(null, " HPE score updation fail: term1...");
                }catch(Exception e){
                    JOptionPane.showMessageDialog(null, e);
                }

                String qry2=null;
                PreparedStatement ps2=null;
                //update term1 Total_Score with HPE marks
                qry2 = "UPDATE term1"
                + " SET Total_Score = English+Science+Social_Science"
                + "+HPE+MAL+Maths+Arts"
                + " WHERE StudentID = ?";

                int res2;
                try{
                    ps2 = conn.prepareStatement(qry2);
                    ps2.setInt(1, Integer.parseInt(jTextFieldId.getText()));
                    res2=ps2.executeUpdate();

                }catch(Exception e){
                    JOptionPane.showMessageDialog(null , e);

                }

                PreparedStatement ps3=null;
                if(jTextFieldFName!=null && jTextFieldSName!=null && jTextFieldId!=null
                    && jTextFieldTotal!=null){

                    try{
                        //update overall with new HPE marks
                        PreparedStatement ps6=null;
                        PreparedStatement ps5=null;
                        ps5 = conn.prepareStatement("update overall o inner join\n" +
                            "(\n" +
                            "SELECT op.StudentID, \n" +
                            "sum(ot.Total_Score) as Total_Score_ot,\n" +
                            "sum(ot.HPE) as HPE_ot,\n" +
                            "sum(op.Total_Score) as Total_Score_op,\n" +
                            "sum(op.HPE) as HPE_op\n" +
                            "FROM term1 ot inner join overall op on op.StudentID = ot.StudentID \n" +
                            "GROUP BY op.StudentID\n" +
                            ") as o1 on o.StudentID = o1.StudentID\n" +
                            "SET Total_Score=Total_Score_op+Total_Score_ot,\n" +
                            " HPE=HPE_op+HPE_ot\n" +
                            " \n" +
                            "\n" +
                            " ");

                        int    res5=ps5.executeUpdate();
                        if (res5>=1){
                            JOptionPane.showMessageDialog(null, res5+" HPE scores updated in overall records"
                                + " in database");
                        }else
                        JOptionPane.showMessageDialog(null, "Student updation failed");

                        //update HPE marks in Assessment Period 1
                        int res6;
                        PreparedStatement ps11=null;
                        ps11 = conn.prepareStatement("update assp1 o inner join\n" +
                            "(\n" +
                            "SELECT op.StudentID, \n" +
                            "sum(ot.Total_Score) as Total_Score_ot,\n" +
                            "sum(ot.HPE) as HPE_ot,\n" +
                            "sum(op.Total_Score) as Total_Score_op,\n" +
                            "sum(op.HPE) as HPE_op\n" +
                            "FROM term1 ot inner join assp1 op on op.StudentID = ot.StudentID \n" +
                            "GROUP BY op.StudentID\n" +
                            ") as o1 on o.StudentID = o1.StudentID\n" +
                            "SET Total_Score=Total_Score_op + Total_Score_ot,\n" +
                            "HPE=HPE_op + HPE_ot\n" +
                            "\n" +
                            "\n" +
                            "");
                        res6=ps11.executeUpdate();

                        //update HPE marks in Grade 8 internal database
                        PreparedStatement ps12=null;
                        ps12 = conn.prepareStatement("update g8internal o inner join\n" +
                            "       (select ot.StudentID, sum(ot.Total_Score) as Total_Score_ot,\n"
                            + "sum(ot.HPE) as HPE_ot\n"
                            +
                            "        from term1 ot\n" +
                            "        where ot.Grade = 'Grade8'\n" +
                            "        group by ot.StudentId\n" +
                            "       ) ot\n" +
                            "       using (StudentID)\n" +
                            "    set o.Total_Score = o.Total_Score + Total_Score_ot,\n"
                            + "o.HPE = o.HPE + HPE_ot\n");
                        int res7=ps12.executeUpdate();

                        /*          //update HPE marks in Grade 7 internal database
                        PreparedStatement ps13=null;
                        ps13 = conn.prepareStatement("update g734 o inner join\n" +
                            "       (select ot.StudentID, sum(ot.Total_Score) as Total_Score_ot,\n"
                            + "sum(ot.HPE) as HPE_ot\n"
                            +
                            "        from term1 ot\n" +
                            "        where ot.Grade = 'Grade7'\n" +
                            "        group by ot.StudentId\n" +
                            "       ) ot\n" +
                            "       using (StudentID)\n" +
                            "    set o.Total_Score = o.Total_Score + Total_Score_ot,\n"
                            + "o.HPE = o.HPE + HPE_ot\n");
                        int res13=ps13.executeUpdate(); */

                    }catch(Exception e){
                        JOptionPane.showMessageDialog(null," Fill out all boxes for student name, ID & marks!\n"+e);
                    }
                    jTextFieldFName.setText("");
                    jTextFieldSName.setText("");
                    jTextFieldTest1.setText("0");
                    jTextFieldTest2.setText("0");
                    jTextFieldTest3.setText("0");
                    jTextFieldAss1.setText("0");
                    jTextFieldAss2.setText("0");
                    jTextFieldAss3.setText("0");
                    jTextFieldAss4.setText("0");
                    jTextFieldTotal.setText("0");

                }else{

                    JOptionPane.showMessageDialog(null, "HPE scores Update failed...");

                }

                break;
                case "2": conn=MySqlConnection();

                PreparedStatement ps8=null;
                {
                    try {
                        //Delete term2 marks in overall db
                        ps8 = conn.prepareStatement("update overall o inner join\n" +
                            "(\n" +
                            "SELECT op.StudentID, \n" +
                            "sum(ot.Total_Score) as Total_Score_ot,\n" +
                            "sum(ot.HPE) as HPE_ot,\n" +
                            "sum(op.Total_Score) as Total_Score_op,\n" +
                            "sum(op.HPE) as HPE_op\n" +
                            "FROM term2 ot inner join overall op on op.StudentID = ot.StudentID \n" +
                            "GROUP BY op.StudentID\n" +
                            ") as o1 on o.StudentID = o1.StudentID\n" +
                            "SET Total_Score=Total_Score_op - Total_Score_ot,\n" +
                            " HPE=HPE_op - HPE_ot\n" +
                            "\n" +
                            "\n" +
                            "");
                        int res3=ps8.executeUpdate();

                        //Delete HPE marks in Assessment Period 1
                        int res6;
                        PreparedStatement ps11=null;
                        ps11 = conn.prepareStatement("update assp1 o inner join\n" +
                            "(\n" +
                            "SELECT op.StudentID, \n" +
                            "sum(ot.Total_Score) as Total_Score_ot,\n" +
                            "sum(ot.HPE) as HPE_ot,\n" +
                            "sum(op.Total_Score) as Total_Score_op,\n" +
                            "sum(op.HPE) as HPE_op\n" +
                            "FROM term2 ot inner join assp1 op on op.StudentID = ot.StudentID \n" +
                            "GROUP BY op.StudentID\n" +
                            ") as o1 on o.StudentID = o1.StudentID\n" +
                            "SET Total_Score=Total_Score_op - Total_Score_ot,\n" +
                            " HPE=HPE_op - HPE_ot\n" +
                            "\n" +
                            "\n" +
                            "");
                        res6=ps11.executeUpdate();

                        //delete HPE marks in Grade 8 internal database
                        PreparedStatement ps12=null;
                        ps12 = conn.prepareStatement("update g8internal o inner join\n" +
                            "       (select ot.StudentID, sum(ot.Total_Score) as Total_Score_ot,\n"
                            + "sum(ot.HPE) as HPE_ot\n"
                            +
                            "        from term2 ot\n" +
                            "        where ot.Grade = 'Grade8'\n" +
                            "        group by ot.StudentId\n" +
                            "       ) ot\n" +
                            "       using (StudentID)\n" +
                            "    set o.Total_Score = o.Total_Score - Total_Score_ot,\n"
                            + "o.HPE = o.HPE - HPE_ot\n");
                        int res7=ps12.executeUpdate();

                        /*      //delete HPE marks in Grade 7 internal database
                        PreparedStatement ps13=null;
                        ps13 = conn.prepareStatement("update g734 o inner join\n" +
                            "       (select ot.StudentID, sum(ot.Total_Score) as Total_Score_ot,\n"
                            + "sum(ot.HPE) as HPE_ot\n"
                            +
                            "        from term2 ot\n" +
                            "        where ot.Grade = 'Grade7'\n" +
                            "        group by ot.StudentId\n" +
                            "       ) ot\n" +
                            "       using (StudentID)\n" +
                            "    set o.Total_Score = o.Total_Score - Total_Score_ot,\n"
                            + "o.HPE = o.HPE - HPE_ot\n");
                        int res13=ps13.executeUpdate();  */

                    } catch (SQLException ex) {
                        Logger.getLogger(MathJFrame.class.getName()).log(Level.SEVERE, null, ex);
                    }
                }

                try{
                    qry=null;
                    ps=null;
                    qry="update term2 set FirstName=?, LastName=?, HPET1=HPET1+?, HPET2=HPET2+?, "
                    + "HPET3=HPET3+?, HPEA1=HPEA1+?,HPEA2=HPEA2+?, HPEA3=HPEA3+?, HPEA4=HPEA4+?, HPE=HPE+? where StudentID=?";
                    ps=conn.prepareStatement(qry);
                    ps.setString(1, jTextFieldFName.getText());
                    ps.setString(2, jTextFieldSName.getText());
                    ps.setInt(3, Integer.parseInt(jTextFieldTest1.getText()));
                    ps.setInt(4, Integer.parseInt(jTextFieldTest2.getText()));

                    ps.setInt(5, Integer.parseInt(jTextFieldTest3.getText()));
                    ps.setInt(6, Integer.parseInt(jTextFieldAss1.getText()));
                    ps.setInt(7, Integer.parseInt(jTextFieldAss2.getText()));
                    ps.setInt(8, Integer.parseInt(jTextFieldAss3.getText()));
                    ps.setInt(9, Integer.parseInt(jTextFieldAss4.getText()));
                    ps.setInt(10, Integer.parseInt(jTextFieldTotal.getText()));
                    ps.setInt(11, Integer.parseInt(jTextFieldId.getText()));

                    int res=ps.executeUpdate();
                    if(res>=1){
                        JOptionPane.showMessageDialog(null, res+" Number of students"
                            +" updated successfully...");
                    }else
                    JOptionPane.showMessageDialog(null, " Student updation fail T2...");
                }catch(Exception e){
                    JOptionPane.showMessageDialog(null, e);
                }

                qry2=null;
                ps2=null;

                qry2 = "UPDATE term2"
                + " SET Total_Score = English+Science+Social_Science"
                + "+HPE+MAL+Maths+Arts"
                + " WHERE StudentID = ?";

                try{
                    ps2 = conn.prepareStatement(qry2);
                    ps2.setInt(1, Integer.parseInt(jTextFieldId.getText()));
                    res2=ps2.executeUpdate();

                }catch(Exception e){
                    JOptionPane.showMessageDialog(null , e);

                }
                if(jTextFieldFName!=null && jTextFieldSName!=null && jTextFieldId!=null
                    && jTextFieldTotal!=null){

                    try{

                        PreparedStatement ps6=null;
                        PreparedStatement ps5=null;
                        ps5 = conn.prepareStatement("update overall o inner join\n" +
                            "(\n" +
                            "SELECT op.StudentID, \n" +
                            "sum(ot.Total_Score) as Total_Score_ot,\n" +
                            "sum(ot.HPE) as HPE_ot,\n" +
                            "sum(op.Total_Score) as Total_Score_op,\n" +
                            "sum(op.HPE) as HPE_op\n" +
                            "FROM term2 ot inner join overall op on op.StudentID = ot.StudentID \n" +
                            "GROUP BY op.StudentID\n" +
                            ") as o1 on o.StudentID = o1.StudentID\n" +
                            "SET Total_Score=Total_Score_op+Total_Score_ot,\n" +
                            " HPE=HPE_op+HPE_ot\n" +
                            " \n" +
                            "\n" +
                            " ");

                        int    res5=ps5.executeUpdate();
                        if (res5>=1){
                            JOptionPane.showMessageDialog(null, res5+" HPE scores updated in overall records"
                                + " in database");
                        }else
                        JOptionPane.showMessageDialog(null, "Student updation failed");

                        //update HPE marks in Assessment Period 1
                        int res6;
                        PreparedStatement ps11=null;
                        ps11 = conn.prepareStatement("update assp1 o inner join\n" +
                            "(\n" +
                            "SELECT op.StudentID, \n" +
                            "sum(ot.Total_Score) as Total_Score_ot,\n" +
                            "sum(ot.HPE) as HPE_ot,\n" +
                            "sum(op.Total_Score) as Total_Score_op,\n" +
                            "sum(op.HPE) as HPE_op\n" +
                            "FROM term2 ot inner join assp1 op on op.StudentID = ot.StudentID \n" +
                            "GROUP BY op.StudentID\n" +
                            ") as o1 on o.StudentID = o1.StudentID\n" +
                            "SET Total_Score=Total_Score_op+Total_Score_ot,\n" +
                            " HPE=HPE_op+HPE_ot\n" +
                            " \n" +
                            "\n" +
                            " ");
                        res6=ps11.executeUpdate();

                        //update HPE marks in Grade 8 internal database
                        PreparedStatement ps12=null;
                        ps12 = conn.prepareStatement("update g8internal o inner join\n" +
                            "       (select ot.StudentID, sum(ot.Total_Score) as Total_Score_ot,\n"
                            + "sum(ot.HPE) as HPE_ot\n"
                            +
                            "        from term2 ot\n" +
                            "        where ot.Grade = 'Grade8'\n" +
                            "        group by ot.StudentId\n" +
                            "       ) ot\n" +
                            "       using (StudentID)\n" +
                            "    set o.Total_Score = o.Total_Score + Total_Score_ot,\n"
                            + "o.HPE = o.HPE + HPE_ot\n");
                        int res7=ps12.executeUpdate();

                        /*                     //update HPE marks in Grade 7 internal database
                        PreparedStatement ps13=null;
                        ps13 = conn.prepareStatement("update g734 o inner join\n" +
                            "       (select ot.StudentID, sum(ot.Total_Score) as Total_Score_ot,\n"
                            + "sum(ot.HPE) as HPE_ot\n"
                            +
                            "        from term2 ot\n" +
                            "        where ot.Grade = 'Grade7'\n" +
                            "        group by ot.StudentId\n" +
                            "       ) ot\n" +
                            "       using (StudentID)\n" +
                            "    set o.Total_Score = o.Total_Score + Total_Score_ot,\n"
                            + "o.HPE = o.HPE + HPE_ot\n");
                        int res13=ps13.executeUpdate(); */

                    }catch(Exception e){
                        JOptionPane.showMessageDialog(null," Fill out all boxes for student name, ID & marks!\n"+e);
                    }
                    jTextFieldFName.setText("");
                    jTextFieldSName.setText("");
                    jTextFieldTest1.setText("0");
                    jTextFieldTest2.setText("0");
                    jTextFieldTest3.setText("0");
                    jTextFieldAss1.setText("0");
                    jTextFieldAss2.setText("0");
                    jTextFieldAss3.setText("0");
                    jTextFieldAss4.setText("0");
                    jTextFieldTotal.setText("0");

                }else{

                    JOptionPane.showMessageDialog(null, "HPE scores Update failed...");

                }

                break;
                case "3": conn=MySqlConnection();

                PreparedStatement ps9=null;
                {
                    try {
                        //Delete HPE marks in overall
                        ps9 = conn.prepareStatement("update overall o inner join\n" +
                            "(\n" +
                            "SELECT op.StudentID, \n" +
                            "sum(ot.Total_Score) as Total_Score_ot,\n" +
                            "sum(ot.HPE) as HPE_ot,\n" +
                            "sum(op.Total_Score) as Total_Score_op,\n" +
                            "sum(op.HPE) as HPE_op\n" +
                            "FROM term3 ot inner join overall op on op.StudentID = ot.StudentID \n" +
                            "GROUP BY op.StudentID\n" +
                            ") as o1 on o.StudentID = o1.StudentID\n" +
                            "SET o.Total_Score=Total_Score_op - Total_Score_ot,\n" +
                            " o.HPE=HPE_op - HPE_ot\n" +
                            "\n" +
                            "\n" +
                            "");
                        int res4=ps9.executeUpdate();

                        //Delete HPE marks in Assessment Period 2
                        int res6;
                        PreparedStatement ps11=null;
                        ps11 = conn.prepareStatement("update assp2 o inner join\n" +
                            "(\n" +
                            "SELECT op.StudentID, \n" +
                            "sum(ot.Total_Score) as Total_Score_ot,\n" +
                            "sum(ot.HPE) as HPE_ot,\n" +
                            "sum(op.Total_Score) as Total_Score_op,\n" +
                            "sum(op.HPE) as HPE_op\n" +
                            "FROM term3 ot inner join assp2 op on op.StudentID = ot.StudentID \n" +
                            "GROUP BY op.StudentID\n" +
                            ") as o1 on o.StudentID = o1.StudentID\n" +
                            "SET o.Total_Score=Total_Score_op - Total_Score_ot,\n" +
                            " o.HPE=HPE_op - HPE_ot\n" +
                            "\n" +
                            "\n" +
                            "");
                        res6=ps11.executeUpdate();

                        //delete HPE marks in Grade 8 internal database
                        PreparedStatement ps12=null;
                        ps12 = conn.prepareStatement("update g8internal o inner join\n" +
                            "       (select ot.StudentID, sum(ot.Total_Score) as Total_Score_ot,\n"
                            + "sum(ot.HPE) as HPE_ot\n"
                            +
                            "        from term3 ot\n" +
                            "        where ot.Grade = 'Grade8'\n" +
                            "        group by ot.StudentId\n" +
                            "       ) ot\n" +
                            "       using (StudentID)\n" +
                            "    set o.Total_Score = o.Total_Score - Total_Score_ot,\n"
                            + "o.HPE = o.HPE - HPE_ot\n");
                        int res7=ps12.executeUpdate();

                        //delete HPE marks in Grade 7 internal database
                        PreparedStatement ps13=null;
                        ps13 = conn.prepareStatement("update g734 o inner join\n" +
                            "       (select ot.StudentID, sum(ot.Total_Score) as Total_Score_ot,\n"
                            + "sum(ot.HPE) as HPE_ot\n"
                            +
                            "        from term3 ot\n" +
                            "        where ot.Grade = 'Grade7'\n" +
                            "        group by ot.StudentId\n" +
                            "       ) ot\n" +
                            "       using (StudentID)\n" +
                            "    set o.Total_Score = o.Total_Score - Total_Score_ot,\n"
                            + "o.HPE = o.HPE - HPE_ot\n");
                        int res13=ps13.executeUpdate();

                        //delete records in  Grade 8 Internal Assessment with  grade 7 marks updates
                        /*            PreparedStatement ps16=null;
                        ps16 = conn.prepareStatement("update g8internal o inner join\n" +
                            "(\n" +
                            "SELECT op.StudentID, \n" +
                            "       sum(ot.Total_Score) as Total_Score_ot,\n" +
                            "       sum(ot.HPE) as HPE_ot,\n" +
                            "       sum(op.Total_Score) as Total_Score_op,\n" +
                            "       sum(op.HPE) as HPE_op\n" +
                            "FROM g734 ot inner join g8internal op \n"
                            + "WHERE  ot.FirstName = op.FirstName AND ot.LastName = op.LastName\n" +
                            "GROUP BY op.FirstName\n" +
                            ") as o1 \n" +
                            "SET Total_Score=Total_Score_op - Total_Score_ot,\n" +
                            " HPE=HPE_op - HPE_ot");

                        int res16=ps16.executeUpdate();     */

                        //add grade 7 term 3&4 marks to grade 8 marks
                        PreparedStatement ps16=null;
                        ps16 = conn.prepareStatement("update g8internal o inner join\n" +
                            "                   ( SELECT op.StudentID,\n" +
                            "                    sum(ot.Total_Score) as Total_Score_ot,\n" +
                            "                    sum(ot.HPE) as HPE_ot,\n" +
                            "                    sum(op.Total_Score) as Total_Score_op,\n" +
                            "                    sum(op.HPE) as HPE_op\n" +
                            "                    FROM g734 ot inner join g8internal op on op.FirstName = ot.FirstName AND op.LastName=ot.LastName\n" +
                            "                    GROUP BY op.StudentID\n" +
                            "                    ) as o1 on o.StudentID = o1.StudentID\n" +
                            "                    SET o.Total_Score=Total_Score_op - Total_Score_ot,\n" +
                            "                    o.HPE=HPE_op - HPE_ot");

                        int res16=ps16.executeUpdate();

                    } catch (SQLException ex) {
                        Logger.getLogger(MathJFrame.class.getName()).log(Level.SEVERE, null, ex);
                    }
                }

                try{
                    qry=null;
                    ps=null;
                    qry="update term3 set FirstName=?, LastName=? , HPET1=HPET1+?, HPET2=HPET2+?, "
                    + "HPET3=HPET3+?, HPEA1=HPEA1+?,HPEA2=HPEA2+?, HPEA3=HPEA3+?, HPEA4=HPEA4+?, HPE=HPE+? where StudentID=?";
                    ps=conn.prepareStatement(qry);
                    ps.setString(1, jTextFieldFName.getText());
                    ps.setString(2, jTextFieldSName.getText());
                    ps.setInt(3, Integer.parseInt(jTextFieldTest1.getText()));
                    ps.setInt(4, Integer.parseInt(jTextFieldTest2.getText()));

                    ps.setInt(5, Integer.parseInt(jTextFieldTest3.getText()));
                    ps.setInt(6, Integer.parseInt(jTextFieldAss1.getText()));
                    ps.setInt(7, Integer.parseInt(jTextFieldAss2.getText()));
                    ps.setInt(8, Integer.parseInt(jTextFieldAss3.getText()));
                    ps.setInt(9, Integer.parseInt(jTextFieldAss4.getText()));
                    ps.setInt(10, Integer.parseInt(jTextFieldTotal.getText()));
                    ps.setInt(11, Integer.parseInt(jTextFieldId.getText()));

                    int res=ps.executeUpdate();
                    if(res>=1){
                        JOptionPane.showMessageDialog(null, res+" Number of students"
                            +" updated successfully...");
                    }else
                    JOptionPane.showMessageDialog(null, " Student updation fail T3...");
                }catch(Exception e){
                    JOptionPane.showMessageDialog(null, e);
                }

                qry2=null;
                ps2=null;

                qry2 = "UPDATE term3"
                + " SET Total_Score = English+Science+Social_Science"
                + "+HPE+MAL+Maths+Arts"
                + " WHERE StudentID = ?";

                try{
                    ps2 = conn.prepareStatement(qry2);
                    ps2.setInt(1, Integer.parseInt(jTextFieldId.getText()));
                    res2=ps2.executeUpdate();

                }catch(Exception e){
                    JOptionPane.showMessageDialog(null , e);

                }

                if(jTextFieldFName!=null && jTextFieldSName!=null && jTextFieldId!=null
                    && jTextFieldTotal!=null){

                    try{

                        PreparedStatement ps6=null;
                        PreparedStatement ps5=null;
                        ps5 = conn.prepareStatement("update overall o inner join\n" +
                            "(\n" +
                            "SELECT op.StudentID, \n" +
                            "sum(ot.Total_Score) as Total_Score_ot,\n" +
                            "sum(ot.HPE) as HPE_ot,\n" +
                            "sum(op.Total_Score) as Total_Score_op,\n" +
                            "sum(op.HPE) as HPE_op\n" +
                            "FROM term3 ot inner join overall op on op.StudentID = ot.StudentID \n" +
                            "GROUP BY op.StudentID\n" +
                            ") as o1 on o.StudentID = o1.StudentID\n" +
                            "SET o.Total_Score=Total_Score_op+Total_Score_ot,\n" +
                            " o.HPE=HPE_op+HPE_ot\n" +
                            " \n" +
                            "\n" +
                            " ");

                        int    res5=ps5.executeUpdate();
                        if (res5>=1){
                            JOptionPane.showMessageDialog(null, res5+" HPE scores updated in overall records"
                                + " in database");
                        }else
                        JOptionPane.showMessageDialog(null, "Student updation failed");

                        //update HPE marks in Assessment Period 2
                        int res6;
                        PreparedStatement ps11=null;
                        ps11 = conn.prepareStatement("update assp2 o inner join\n" +
                            "(\n" +
                            "SELECT op.StudentID, \n" +
                            "sum(ot.Total_Score) as Total_Score_ot,\n" +
                            "sum(ot.HPE) as HPE_ot,\n" +
                            "sum(op.Total_Score) as Total_Score_op,\n" +
                            "sum(op.HPE) as HPE_op\n" +
                            "FROM term3 ot inner join assp2 op on op.StudentID = ot.StudentID \n" +
                            "GROUP BY op.StudentID\n" +
                            ") as o1 on o.StudentID = o1.StudentID\n" +
                            "SET o.Total_Score=Total_Score_op+Total_Score_ot,\n" +
                            " o.HPE=HPE_op+HPE_ot\n" +
                            " \n" +
                            "\n" +
                            " ");
                        res6=ps11.executeUpdate();

                        /*                //update HPE marks in Grade 8 internal database
                        PreparedStatement ps12=null;
                        ps12 = conn.prepareStatement("update g8internal o inner join\n" +
                            "       (select ot.StudentID, sum(ot.Total_Score) as Total_Score_ot,\n"
                            + "sum(ot.HPE) as HPE_ot\n"
                            +
                            "        from term3 ot\n" +
                            "        where ot.Grade = 'Grade8'\n" +
                            "        group by ot.StudentId\n" +
                            "       ) ot\n" +
                            "       using (StudentID)\n" +
                            "    set o.Total_Score = o.Total_Score + Total_Score_ot,\n"
                            + "o.HPE = o.HPE + HPE_ot\n");
                        int res7=ps12.executeUpdate();  */

                        //update HPE marks in Grade 7 internal database
                        PreparedStatement ps13=null;
                        ps13 = conn.prepareStatement("update g734 o inner join\n" +
                            "       (select ot.StudentID, sum(ot.Total_Score) as Total_Score_ot,\n"
                            + "sum(ot.HPE) as HPE_ot\n"
                            +
                            "        from term3 ot\n" +
                            "        where ot.Grade = 'Grade7'\n" +
                            "        group by ot.StudentId\n" +
                            "       ) ot\n" +
                            "       using (StudentID)\n" +
                            "    set o.Total_Score = o.Total_Score + Total_Score_ot,\n"
                            + "o.HPE = o.HPE + HPE_ot\n");
                        int res13=ps13.executeUpdate();

                        /*           //update records in  Grade 8 Internal Assessment with  grade 7 marks updates
                        PreparedStatement ps16=null;
                        ps16 = conn.prepareStatement("update g8internal o inner join\n" +
                            "(\n" +
                            "SELECT op.StudentID, \n" +
                            "       sum(ot.Total_Score) as Total_Score_ot,\n" +
                            "       sum(ot.HPE) as HPE_ot,\n" +
                            "       sum(op.Total_Score) as Total_Score_op,\n" +
                            "       sum(op.HPE) as HPE_op\n" +
                            "FROM g734 ot inner join g8internal op \n"
                            + "WHERE  ot.FirstName = op.FirstName AND ot.LastName = op.LastName\n" +
                            "GROUP BY op.FirstName\n" +
                            ") as o1 \n" +
                            "SET Total_Score=Total_Score_op + Total_Score_ot,\n" +
                            " HPE=HPE_op + HPE_ot");

                        int res16=ps16.executeUpdate(); */

                    }catch(Exception e){
                        JOptionPane.showMessageDialog(null," Fill out all boxes for student name, ID & marks!\n"+e);
                    }

                    PreparedStatement ps16=null;
                    try {
                        ps16 = conn.prepareStatement("update g8internal o inner join\n" +
                            "                   ( SELECT op.StudentID,\n" +
                            "                    sum(ot.Total_Score) as Total_Score_ot,\n" +
                            "                    sum(ot.HPE) as HPE_ot,\n"
                            +
                            "                    sum(op.Total_Score) as Total_Score_op,\n"
                            +
                            "                    sum(op.HPE) as HPE_op\n" +
                            "                    FROM g734 ot inner join g8internal op on op.FirstName = ot.FirstName AND op.LastName=ot.LastName\n" +
                            "                    GROUP BY op.StudentID\n" +
                            "                    ) as o1 on o.StudentID = o1.StudentID\n" +
                            "                    SET o.Total_Score=Total_Score_op + Total_Score_ot,\n" +
                            "                    o.HPE=HPE_op + HPE_ot\n"
                        );
                        int res16=ps16.executeUpdate();
                    } catch (SQLException ex) {
                        Logger.getLogger(MathJFrame.class.getName()).log(Level.SEVERE, null, ex);
                    }

                    jTextFieldFName.setText("");
                    jTextFieldSName.setText("");
                    jTextFieldTest1.setText("0");
                    jTextFieldTest2.setText("0");
                    jTextFieldTest3.setText("0");
                    jTextFieldAss1.setText("0");
                    jTextFieldAss2.setText("0");
                    jTextFieldAss3.setText("0");
                    jTextFieldAss4.setText("0");
                    jTextFieldTotal.setText("0");

                }

                break;
                case "4": conn=MySqlConnection();

                PreparedStatement ps10=null;
                {
                    try {
                        ps10 = conn.prepareStatement("update overall o inner join\n" +
                            "(\n" +
                            "SELECT op.StudentID, \n" +
                            "sum(ot.Total_Score) as Total_Score_ot,\n" +
                            "sum(ot.HPE) as HPE_ot,\n" +
                            "sum(op.Total_Score) as Total_Score_op,\n" +
                            "sum(op.HPE) as HPE_op\n" +
                            "FROM term4 ot inner join overall op on op.StudentID = ot.StudentID \n" +
                            "GROUP BY op.StudentID\n" +
                            ") as o1 on o.StudentID = o1.StudentID\n" +
                            "SET o.Total_Score=Total_Score_op - Total_Score_ot,\n" +
                            " o.HPE=HPE_op - HPE_ot\n" +
                            "\n" +
                            "\n" +
                            "");
                        int res5=ps10.executeUpdate();

                        //Delete HPE marks in Assessment Period 2
                        int res6;
                        PreparedStatement ps11=null;
                        ps11 = conn.prepareStatement("update assp2 o inner join\n" +
                            "(\n" +
                            "SELECT op.StudentID, \n" +
                            "sum(ot.Total_Score) as Total_Score_ot,\n" +
                            "sum(ot.HPE) as HPE_ot,\n" +
                            "sum(op.Total_Score) as Total_Score_op,\n" +
                            "sum(op.HPE) as HPE_op\n" +
                            "FROM term4 ot inner join assp2 op on op.StudentID = ot.StudentID \n" +
                            "GROUP BY op.StudentID\n" +
                            ") as o1 on o.StudentID = o1.StudentID\n" +
                            "SET o.Total_Score=Total_Score_op - Total_Score_ot,\n" +
                            "o.HPE=HPE_op - HPE_ot\n" +
                            "\n" +
                            "\n" +
                            "");
                        res6=ps11.executeUpdate();

                        //delete HPE marks in Grade 8 internal database
                        PreparedStatement ps12=null;
                        ps12 = conn.prepareStatement("update g8internal o inner join\n" +
                            "       (select ot.StudentID, sum(ot.Total_Score) as Total_Score_ot,\n"
                            + "sum(ot.HPE) as HPE_ot\n"
                            +
                            "        from term4 ot\n" +
                            "        where ot.Grade = 'Grade8'\n" +
                            "        group by ot.StudentId\n" +
                            "       ) ot\n" +
                            "       using (StudentID)\n" +
                            "    set o.Total_Score = o.Total_Score - Total_Score_ot,\n"
                            + "o.HPE = o.HPE - HPE_ot\n");
                        int res7=ps12.executeUpdate();

                        //delete HPE marks in Grade 7 internal database
                        PreparedStatement ps13=null;
                        ps13 = conn.prepareStatement("update g734 o inner join\n" +
                            "       (select ot.StudentID, sum(ot.Total_Score) as Total_Score_ot,\n"
                            + "sum(ot.HPE) as HPE_ot\n"
                            +
                            "        from term4 ot\n" +
                            "        where ot.Grade = 'Grade7'\n" +
                            "        group by ot.StudentId\n" +
                            "       ) ot\n" +
                            "       using (StudentID)\n" +
                            "    set o.Total_Score = o.Total_Score - Total_Score_ot,\n"
                            + "o.HPE = o.HPE - HPE_ot\n");
                        int res13=ps13.executeUpdate();

                        //delete records in  Grade 8 Internal Assessment with  grade 7 marks updates
                        /*        PreparedStatement ps16=null;
                        ps16 = conn.prepareStatement("update g8internal o inner join\n" +
                            "(\n" +
                            "SELECT op.StudentID, \n" +
                            "       sum(ot.Total_Score) as Total_Score_ot,\n" +
                            "       sum(ot.HPE) as HPE_ot,\n" +
                            "       sum(op.Total_Score) as Total_Score_op,\n" +
                            "       sum(op.HPE) as HPE_op\n" +
                            "FROM g734 ot inner join g8internal op \n"
                            + "WHERE  ot.FirstName = op.FirstName AND ot.LastName = op.LastName\n" +
                            "GROUP BY op.FirstName\n" +
                            ") as o1 \n" +
                            "SET Total_Score=Total_Score_op - Total_Score_ot,\n" +
                            " HPE=HPE_op - HPE_ot");

                        int res16=ps16.executeUpdate(); */

                        PreparedStatement ps16=null;
                        ps16 = conn.prepareStatement("update g8internal o inner join\n" +
                            "                   ( SELECT op.StudentID,\n" +
                            "                    sum(ot.Total_Score) as Total_Score_ot,\n" +
                            "                    sum(ot.HPE) as HPE_ot,\n" +
                            "                    sum(op.Total_Score) as Total_Score_op,\n" +
                            "                    sum(op.HPE) as HPE_op\n" +
                            "                    FROM g734 ot inner join g8internal op on op.FirstName = ot.FirstName AND op.LastName=ot.LastName\n" +
                            "                    GROUP BY op.StudentID\n" +
                            "                    ) as o1 on o.StudentID = o1.StudentID\n" +
                            "                    SET o.Total_Score=Total_Score_op - Total_Score_ot,\n" +
                            "                    o.HPE=HPE_op - HPE_ot");

                        int res16=ps16.executeUpdate();

                    } catch (SQLException ex) {
                        Logger.getLogger(MathJFrame.class.getName()).log(Level.SEVERE, null, ex);
                    }
                }

                try{
                    qry=null;
                    ps=null;
                    qry="update term4 set FirstName=?, LastName=? , HPET1=HPET1+?, HPET2=HPET2+?, "
                    + "HPET3=HPET3+?, HPEA1=HPEA1+?,HPEA2=HPEA2+?, HPEA3=HPEA3+?, HPEA4=HPEA4+?, HPE=HPE+? where StudentID=?";
                    ps=conn.prepareStatement(qry);
                    ps.setString(1, jTextFieldFName.getText());
                    ps.setString(2, jTextFieldSName.getText());
                    ps.setInt(3, Integer.parseInt(jTextFieldTest1.getText()));
                    ps.setInt(4, Integer.parseInt(jTextFieldTest2.getText()));

                    ps.setInt(5, Integer.parseInt(jTextFieldTest3.getText()));
                    ps.setInt(6, Integer.parseInt(jTextFieldAss1.getText()));
                    ps.setInt(7, Integer.parseInt(jTextFieldAss2.getText()));
                    ps.setInt(8, Integer.parseInt(jTextFieldAss3.getText()));
                    ps.setInt(9, Integer.parseInt(jTextFieldAss4.getText()));
                    ps.setInt(10, Integer.parseInt(jTextFieldTotal.getText()));
                    ps.setInt(11, Integer.parseInt(jTextFieldId.getText()));

                    int res=ps.executeUpdate();
                    if(res>=1){
                        JOptionPane.showMessageDialog(null, res+" Number of students"
                            +" updated successfully...");
                    }else
                    JOptionPane.showMessageDialog(null, " Student updation fail T4...");
                }catch(Exception e){
                    JOptionPane.showMessageDialog(null, e);
                }

                qry2=null;
                ps2=null;

                qry2 = "UPDATE term4"
                + " SET Total_Score = English+Science+Social_Science"
                + "+HPE+MAL+Maths+Arts"
                + " WHERE StudentID = ?";

                try{
                    ps2 = conn.prepareStatement(qry2);
                    ps2.setInt(1, Integer.parseInt(jTextFieldId.getText()));
                    res2=ps2.executeUpdate();

                }catch(Exception e){
                    JOptionPane.showMessageDialog(null , e);

                }

                if(jTextFieldFName!=null && jTextFieldSName!=null && jTextFieldId!=null
                    && jTextFieldTotal!=null){

                    try{

                        PreparedStatement ps6=null;
                        PreparedStatement ps5=null;
                        ps5 = conn.prepareStatement("update overall o inner join\n" +
                            "(\n" +
                            "SELECT op.StudentID, \n" +
                            "sum(ot.Total_Score) as Total_Score_ot,\n" +
                            "sum(ot.HPE) as HPE_ot,\n" +
                            "sum(op.Total_Score) as Total_Score_op,\n" +
                            "sum(op.HPE) as HPE_op\n" +
                            "FROM term4 ot inner join overall op on op.StudentID = ot.StudentID \n" +
                            "GROUP BY op.StudentID\n" +
                            ") as o1 on o.StudentID = o1.StudentID\n" +
                            "SET o.Total_Score=Total_Score_op+Total_Score_ot,\n" +
                            " o.HPE=HPE_op+HPE_ot\n" +
                            " \n" +
                            "\n" +
                            " ");

                        int    res5=ps5.executeUpdate();
                        if (res5>=1){
                            JOptionPane.showMessageDialog(null, res5+" HPE scores updated in overall records"
                                + " in database");
                        }else
                        JOptionPane.showMessageDialog(null, "Student updation failed");

                        //update HPE marks in Assessment Period 2
                        int res8;
                        PreparedStatement ps14=null;
                        ps14 = conn.prepareStatement("update assp2 o inner join\n" +
                            "(\n" +
                            "SELECT op.StudentID, \n" +
                            "sum(ot.Total_Score) as Total_Score_ot,\n" +
                            "sum(ot.HPE) as HPE_ot,\n" +
                            "sum(op.Total_Score) as Total_Score_op,\n" +
                            "sum(op.HPE) as HPE_op\n" +
                            "FROM term4 ot inner join assp2 op on op.StudentID = ot.StudentID \n" +
                            "GROUP BY op.StudentID\n" +
                            ") as o1 on o.StudentID = o1.StudentID\n" +
                            "SET o.Total_Score=Total_Score_op + Total_Score_ot,\n" +
                            "o.HPE=HPE_op + HPE_ot\n" +
                            "\n" +
                            "\n" +
                            "");
                        res8=ps14.executeUpdate();

                        /*                 //update HPE marks in Grade 8 internal database
                        PreparedStatement ps13=null;
                        ps13 = conn.prepareStatement("update g8internal o inner join\n" +
                            "       (select ot.StudentID, sum(ot.Total_Score) as Total_Score_ot,\n"
                            + "sum(ot.HPE) as HPE_ot\n"
                            +
                            "        from term4 ot\n" +
                            "        where ot.Grade = 'Grade8'\n" +
                            "        group by ot.StudentId\n" +
                            "       ) ot\n" +
                            "       using (StudentID)\n" +
                            "    set o.Total_Score = o.Total_Score + Total_Score_ot,\n"
                            + "o.HPE = o.HPE + HPE_ot\n");
                        int res9=ps13.executeUpdate();      */

                        //update HPE marks in Grade 7 internal database
                        PreparedStatement ps15=null;
                        ps15 = conn.prepareStatement("update g734 o inner join\n" +
                            "       (select ot.StudentID, sum(ot.Total_Score) as Total_Score_ot,\n"
                            + "sum(ot.HPE) as HPE_ot\n"
                            +
                            "        from term4 ot\n" +
                            "        where ot.Grade = 'Grade7'\n" +
                            "        group by ot.StudentId\n" +
                            "       ) ot\n" +
                            "       using (StudentID)\n" +
                            "    set o.Total_Score = o.Total_Score + Total_Score_ot,\n"
                            + "o.HPE = o.HPE + HPE_ot\n");
                        int res15=ps15.executeUpdate();

                        //update English marks in Grade 8 internal database from grade 7 term 3 and 4 marks
                        /*                PreparedStatement ps15=null;
                        ps15 = conn.prepareStatement("update g8internal o inner join\n" +
                            "(\n" +
                            "SELECT op.StudentID, \n" +
                            "       sum(ot.Total_Score) as Total_Score_ot,\n"+
                            "       sum(ot.HPE) as HPE_ot,\n"
                            + "sum(op.Total_Score) as Total_Score_op,\n"
                            + "sum(op.HPE) as HPE_op\n" +

                            "FROM term4 ot inner join g8internal op on op.StudentID = ot.StudentID \n" +
                            "WHERE op.FirstName = ot.FirstName AND op.LastName = ot.LastName\n" +
                            "GROUP BY op.FirstName\n" +
                            ") as o1 on o.StudentID = o1.StudentID\n" +
                            "SET o.Total_Score=Total_Score_op + Total_Score_ot,\n" +

                            " o.HPE=HPE_op + HPE_ot\n");
                        int res15=ps15.executeUpdate();    */

                    }catch(Exception e){
                        JOptionPane.showMessageDialog(null," Fill out all boxes for student name, ID & marks!\n"+e);
                    }

                    /*     try{
                        //update records in  Grade 8 Internal Assessment with  grade 7 marks updates
                        PreparedStatement ps16=null;
                        ps16 = conn.prepareStatement("update g8internal o inner join\n" +
                            "(\n" +
                            "SELECT op.StudentID, \n" +
                            "       sum(ot.Total_Score) as Total_Score_ot,\n" +
                            //"       sum(ot.English) as English_ot,\n" +
                            "       sum(ot.HPE) as HPE_ot,\n" +
                            //"       sum(ot.Science) as Science_ot,\n" +
                            //"       sum(ot.Social_Science) as Social_Science_ot,\n" +
                            //"       sum(ot.MAL) as MAL_ot,\n" +
                            // "       sum(ot.HPE) as HPE_ot,\n" +
                            //  "       sum(ot.Arts) as Arts_ot,\n" +
                            "       sum(op.Total_Score) as Total_Score_op,\n" +
                            // "       sum(op.English) as English_op,\n" +
                            "       sum(op.HPE) as HPE_op\n" +
                            //"       sum(op.Science) as Science_op,\n" +
                            //"       sum(op.Social_Science) as Social_Science_op,\n" +
                            //"       sum(op.MAL) as MAL_op,\n" +
                            //"       sum(op.HPE) as HPE_op,\n" +
                            //"       sum(op.Arts) as Arts_op\n" +
                            "FROM g734 ot inner join g8internal op \n"
                            + "WHERE  ot.FirstName = op.FirstName AND ot.LastName = op.LastName\n" +
                            "GROUP BY op.FirstName\n" +
                            ") as o1 \n" +
                            "SET Total_Score=Total_Score_op + Total_Score_ot,\n" +
                            // " English=English_op + English_ot,\n" +
                            " HPE=HPE_op + HPE_ot");

                        int res16=ps16.executeUpdate();
                    } catch (SQLException ex) {
                        Logger.getLogger(MathJFrame.class.getName()).log(Level.SEVERE, null, ex);
                    }       */

                }else{

                    JOptionPane.showMessageDialog(null, "HPE scores Update failed...");

                }

                PreparedStatement ps16=null;
                {
                    try {
                        ps16 = conn.prepareStatement("update g8internal o inner join\n" +
                            "                   ( SELECT op.StudentID,\n" +
                            "                    sum(ot.Total_Score) as Total_Score_ot,\n" +
                            "                    sum(ot.HPE) as HPE_ot,\n"
                            +
                            "                    sum(op.Total_Score) as Total_Score_op,\n"
                            +
                            "                    sum(op.HPE) as HPE_op\n" +
                            "                    FROM g734 ot inner join g8internal op on op.FirstName = ot.FirstName AND op.LastName=ot.LastName\n" +
                            "                    GROUP BY op.StudentID\n" +
                            "                    ) as o1 on o.StudentID = o1.StudentID\n" +
                            "                    SET o.Total_Score=Total_Score_op + Total_Score_ot,\n" +
                            "                    o.HPE=HPE_op + HPE_ot\n"
                        );
                        int res16=ps16.executeUpdate();
                    } catch (SQLException ex) {
                        Logger.getLogger(MathJFrame.class.getName()).log(Level.SEVERE, null, ex);
                    }
                    jTextFieldFName.setText("");
                    jTextFieldSName.setText("");
                    jTextFieldTest1.setText("0");
                    jTextFieldTest2.setText("0");
                    jTextFieldTest3.setText("0");
                    jTextFieldAss1.setText("0");
                    jTextFieldAss2.setText("0");
                    jTextFieldAss3.setText("0");
                    jTextFieldAss4.setText("0");
                    jTextFieldTotal.setText("0");
                }

                break;

                default: break;

            }
        }
    }//GEN-LAST:event_jButtonUpdate1ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(HPEJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(HPEJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(HPEJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(HPEJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new HPEJFrame().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButtonAdd;
    private javax.swing.JButton jButtonExit;
    private javax.swing.JButton jButtonUpdate1;
    private javax.swing.JComboBox<String> jComboBoxTerm;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JTextField jTextFieldAss1;
    private javax.swing.JTextField jTextFieldAss2;
    private javax.swing.JTextField jTextFieldAss3;
    private javax.swing.JTextField jTextFieldAss4;
    private javax.swing.JTextField jTextFieldFName;
    private javax.swing.JTextField jTextFieldId;
    private javax.swing.JTextField jTextFieldSName;
    private javax.swing.JTextField jTextFieldTest1;
    private javax.swing.JTextField jTextFieldTest2;
    private javax.swing.JTextField jTextFieldTest3;
    private javax.swing.JTextField jTextFieldTotal;
    // End of variables declaration//GEN-END:variables
private Connection MySqlConnection() {
        Connection conn=null;
        try{
            Class.forName("com.mysql.jdbc.Driver");
            conn=DriverManager.getConnection("jdbc:mysql://localhost/studentrecord",
                    "root", "sTud397r3*d");
            
            return conn;
    }catch(Exception e){
        JOptionPane.showMessageDialog(null, "MySQL Connection failed");
        return null;
    } 
    }



}
